set(ENV{LANG} C)

function(split_lines in out)
    string(ASCII 1 one)
    string(ASCII 2 two)
    string(ASCII 3 three)
    string(ASCII 4 four)
    string(REPLACE ";" "${one}" str "${in}")
    string(REPLACE "[" "${two}" str "${str}")
    string(REPLACE "]" "${three}" str "${str}")
    string(REPLACE "\\" "${four}" str "${str}")
    string(REPLACE "\n" ";" str "${str}")
    set(${out} "${str}" PARENT_SCOPE)
endfunction()

function(detect flavor)
    string(ASCII 4 four)
    if(NOT "${flavor}" STREQUAL GCC)
        message(FATAL_ERROR "Flavour [${flavor}] unknown.")
    endif()
    set(empty ${CMAKE_CURRENT_BINARY_DIR}/empty.h)
    file(WRITE ${empty} "\n")

    foreach(lang C CXX)
        if(${lang} STREQUAL CXX)
            set(l c++)
        else()
            set(l c)
        endif()
        # FIXME: Detect -fcoroutines
        execute_process(COMMAND ${RS_${lang}_COMPILER}
            -v -x ${l} -E ${empty}
            RESULT_VARIABLE rr
            OUTPUT_VARIABLE bogus
            ERROR_VARIABLE out)
        if(rr)
            message(FATAL_ERROR "?? [${rr}]")
        endif()

        split_lines("${out}" f)

        set(head "#include <...> search starts here:")
        set(tail "End of search list.")

        set(in_list)
        set(lis)
        foreach(x IN LISTS f)
            # message(STATUS "line: [${x}]")
            if("${x}" STREQUAL "${head}")
                set(in_list ON)
            elseif("${x}" STREQUAL "${tail}")
                break()
            elseif(in_list)
                string(STRIP "${x}" p)
                string(REPLACE "${four}" "/" p "${p}")
                cmake_path(SET p "${p}")
                cmake_path(NORMAL_PATH p)
                list(APPEND lis "${p}")
            endif()
        endforeach()
        set(out_${lang} ${lis})
        message(STATUS "${lang}: ${lis}")
    endforeach()
    set(RS_C_PATH ${out_C} PARENT_SCOPE)
    set(RS_CXX_PATH ${out_CXX} PARENT_SCOPE)
endfunction()
